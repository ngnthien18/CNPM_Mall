//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CNPMLyThuyet.Model
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Core.Objects;
    using System.Data.Entity.Infrastructure;
    
    public partial class TTMaiEntities : DbContext
    {
        public TTMaiEntities()
            : base("name=TTMaiEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<ChiTietBaoTri> ChiTietBaoTris { get; set; }
        public virtual DbSet<DoanhThu> DoanhThus { get; set; }
        public virtual DbSet<HoaDon> HoaDons { get; set; }
        public virtual DbSet<KhachHang> KhachHangs { get; set; }
        public virtual DbSet<MatBang> MatBangs { get; set; }
        public virtual DbSet<NhanVien> NhanViens { get; set; }
        public virtual DbSet<PhongBan> PhongBans { get; set; }
        public virtual DbSet<Tang> Tangs { get; set; }
        public virtual DbSet<ThietBi> ThietBis { get; set; }
        public virtual DbSet<User> Users { get; set; }

        public virtual ObjectResult<sp_getyear_Result> sp_getyear(Nullable<int> year)
        {
            var yearParameter = year.HasValue ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_getyear_Result>("sp_getyear", yearParameter);
        }

        public virtual ObjectResult<sp_getyear2_Result> sp_getyear2(Nullable<int> year)
        {
            var yearParameter = year.HasValue ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_getyear2_Result>("sp_getyear2", yearParameter);
        }
    }
}
